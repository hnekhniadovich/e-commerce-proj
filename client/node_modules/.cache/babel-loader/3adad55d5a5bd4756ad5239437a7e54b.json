{"ast":null,"code":"var _jsxFileName = \"/home/hanna/Documents/traintest/e-commerce-app-react/v2-advanced/e-commerce-app/src/pages/shop/shop.component.jsx\";\nimport React, { Component } from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { updateCollections } from '../../redux/shop/shop.actions';\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\nimport CollectionPage from '../collection/collection.component';\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\n\nclass ShopPage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true\n    };\n    this.unsibscribeFromSnapshot = null;\n  }\n\n  componentDidMount() {\n    const updateCollections = this.props.updateCollections;\n    const collectionRef = firestore.collection('collections');\n    console.log(collectionRef);\n    collectionRef.onSnapshot(async snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      console.log(collectionsMap);\n      updateCollections(collectionsMap);\n    });\n  }\n\n  render() {\n    const match = this.props.match;\n    return React.createElement(\"div\", {\n      className: \"shop-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      component: CollectionsOverview,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: `${match.path}/:categoryId`,\n      component: CollectionPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/home/hanna/Documents/traintest/e-commerce-app-react/v2-advanced/e-commerce-app/src/pages/shop/shop.component.jsx"],"names":["React","Component","Route","connect","updateCollections","CollectionsOverview","CollectionPage","WithSpinner","firestore","convertCollectionsSnapshotToMap","ShopPage","state","loading","unsibscribeFromSnapshot","componentDidMount","props","collectionRef","collection","console","log","onSnapshot","snapshot","collectionsMap","render","match","path","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,iBAAT,QAAkC,+BAAlC;AAEA,OAAOC,mBAAP,MAAgC,sEAAhC;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AACA,OAAOC,WAAP,MAAwB,sDAAxB;AAEA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;;AAEA,MAAMC,QAAN,SAAuBT,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAC7BU,KAD6B,GACtB;AACHC,MAAAA,OAAO,EAAE;AADN,KADsB;AAAA,SAK7BC,uBAL6B,GAKH,IALG;AAAA;;AAO7BC,EAAAA,iBAAiB,GAAG;AAAA,UACRV,iBADQ,GACc,KAAKW,KADnB,CACRX,iBADQ;AAEhB,UAAMY,aAAa,GAAGR,SAAS,CAACS,UAAV,CAAqB,aAArB,CAAtB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,aAAZ;AAGAA,IAAAA,aAAa,CAACI,UAAd,CAAyB,MAAMC,QAAN,IAAkB;AACvC,YAAMC,cAAc,GAAGb,+BAA+B,CAACY,QAAD,CAAtD;AACAH,MAAAA,OAAO,CAACC,GAAR,CAAYG,cAAZ;AACAlB,MAAAA,iBAAiB,CAACkB,cAAD,CAAjB;AACH,KAJD;AAKH;;AAEDC,EAAAA,MAAM,GAAG;AAAA,UACGC,KADH,GACa,KAAKT,KADlB,CACGS,KADH;AAEL,WACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAG,GAAEA,KAAK,CAACC,IAAK,EAAjC;AAAoC,MAAA,SAAS,EAAEpB,mBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAG,GAAEmB,KAAK,CAACC,IAAK,cAA3B;AAA0C,MAAA,SAAS,EAAEnB,cAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ;AAMH;;AA5B4B;;AA+BjC,MAAMoB,kBAAkB,GAAGC,QAAQ,KAAK;AACpCvB,EAAAA,iBAAiB,EAAEkB,cAAc,IAAIK,QAAQ,CAACvB,iBAAiB,CAACkB,cAAD,CAAlB;AADT,CAAL,CAAnC;;AAIA,eAAenB,OAAO,CAAC,IAAD,EAAOuB,kBAAP,CAAP,CAAkChB,QAAlC,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { updateCollections } from '../../redux/shop/shop.actions';\n\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\nimport CollectionPage from '../collection/collection.component';\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\n\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\n\nclass ShopPage extends Component {\n    state= {\n        loading: true\n    };\n    \n    unsibscribeFromSnapshot = null;\n\n    componentDidMount() {\n        const { updateCollections } = this.props;\n        const collectionRef = firestore.collection('collections');\n        console.log(collectionRef);\n        \n\n        collectionRef.onSnapshot(async snapshot => {\n            const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n            console.log(collectionsMap);\n            updateCollections(collectionsMap);\n        })\n    }\n\n    render() {\n        const { match } = this.props;\n        return (\n            <div className=\"shop-page\">\n                <Route exact path={`${match.path}`} component={CollectionsOverview} />\n                <Route path={`${match.path}/:categoryId`} component={CollectionPage} />\n            </div>\n        );\n    }\n}\n\nconst mapDispatchToProps = dispatch => ({\n    updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n});\n    \nexport default connect(null, mapDispatchToProps)(ShopPage);"]},"metadata":{},"sourceType":"module"}