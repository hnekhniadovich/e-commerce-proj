{"ast":null,"code":"import _objectSpread from \"/home/hanna/Documents/traintest/e-commerce-app-react/v4/e-commerce-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/home/hanna/Documents/traintest/e-commerce-app-react/v4/e-commerce-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/hanna/Documents/traintest/e-commerce-app-react/v4/e-commerce-app/src/components/sign-in/sign-in.component.jsx\";\nimport React, { Component, useState } from 'react';\nimport { connect } from 'react-redux';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { googleSignInStart, emailSignInStart } from '../../redux/user/user.actions';\nimport './sign-in.styles.scss';\n\nconst SignIn = ({\n  emailSignInStart,\n  googleSignInStart\n}) => {\n  const _useState = useState({\n    email: '',\n    password: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        userCredentials = _useState2[0],\n        setCredentials = _useState2[1];\n\n  const email = userCredentials.email,\n        password = userCredentials.password;\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const emailSignInStart = this.props.emailSignInStart;\n    emailSignInStart(email, password);\n  };\n\n  const handleChange = event => {\n    const _event$target = event.target,\n          value = _event$target.value,\n          name = _event$target.name;\n    setCredentials(_objectSpread({}, userCredentials, {\n      [name]: value\n    }));\n  };\n\n  return React.createElement(\"div\", {\n    className: \"sign-in\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"I already have an account\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"Sign in with your email and password\"), React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(FormInput, {\n    type: \"email\",\n    name: \"email\",\n    value: email,\n    label: \"Email\",\n    required: true,\n    handleChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    type: \"password\",\n    name: \"password\",\n    value: password,\n    label: \"Password\",\n    required: true,\n    handleChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"buttons\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(CustomButton, {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"Sign In\"), React.createElement(CustomButton, {\n    type: \"button\",\n    onClick: googleSignInStart,\n    isGoogleSignIn: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"Sign In With Google\"))));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) => dispatch(emailSignInStart({\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["/home/hanna/Documents/traintest/e-commerce-app-react/v4/e-commerce-app/src/components/sign-in/sign-in.component.jsx"],"names":["React","Component","useState","connect","FormInput","CustomButton","googleSignInStart","emailSignInStart","SignIn","email","password","userCredentials","setCredentials","handleSubmit","event","preventDefault","props","handleChange","target","value","name","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component, useState } from 'react';\nimport { connect } from 'react-redux';\n\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\n\nimport { googleSignInStart, emailSignInStart } from '../../redux/user/user.actions';\n\nimport './sign-in.styles.scss';\n\nconst SignIn = ({ emailSignInStart, googleSignInStart }) => {\n  const [userCredentials, setCredentials] = useState({ email: '', password: '' });\n  \n  const { email, password } = userCredentials;\n\n  const handleSubmit = async event => {\n\n    event.preventDefault();  \n    const { emailSignInStart } = this.props;\n    emailSignInStart(email, password);\n    \n  };\n\n  const handleChange = (event) => {\n    const { value, name } = event.target;\n    setCredentials({...userCredentials, [name]: value });\n  }\n\n    return (\n      <div className=\"sign-in\">\n        <h2 className=\"title\">I already have an account</h2>\n        <span>Sign in with your email and password</span>\n        <form onSubmit={handleSubmit}>\n          <FormInput\n            type=\"email\"\n            name=\"email\"\n            value={email}\n            label=\"Email\"\n            required\n            handleChange={handleChange}\n          />\n          <FormInput\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            label=\"Password\"\n            required\n            handleChange={handleChange}\n          />\n          <div className=\"buttons\">\n            <CustomButton type=\"submit\">Sign In</CustomButton>\n            <CustomButton\n              type=\"button\"\n              onClick={googleSignInStart}\n              isGoogleSignIn\n            >\n              Sign In With Google\n            </CustomButton>\n          </div>\n        </form>\n      </div>\n    );\n  }\n\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) => dispatch(emailSignInStart({ email, password }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);"]},"metadata":{},"sourceType":"module"}