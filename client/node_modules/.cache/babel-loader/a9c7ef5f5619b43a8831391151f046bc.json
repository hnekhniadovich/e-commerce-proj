{"ast":null,"code":"import { createSelector } from 'reselect';\n\nconst selectShop = state => state.shop;\n\nexport const selectCollections = createSelector(selectShop, shop => shop.collections);\nexport const selectCollectionsForPreview = createSelector(selectCollections, collections => collections ? Object.keys(collections).map(key => collections[key]) : []);\nexport const selectCollection = collectionUrlParam => createSelector(selectCollections, collections => collections ? collections[collectionUrlParam] : null);\nexport const selectIsCollectionFetching = createSelector(selectShop, shop => shop.isFetching);\nexport const selectIsCollectionsLoaded = createSelector(selectShop, //if the collection is loaded, we get true, otherwise we get false\nshop => !!shop.collections); //EXAMPLE\n// export const selectCollectionsForPreview = createSelector(\n//     selectCollections,\n//     (collections) => {\n//         console.log(collections);\n//         let newCollection = Object.keys(collections).map(key => collections[key]);\n//         console.log(newCollection);\n//         return newCollection;\n//     }\n// );","map":{"version":3,"sources":["/home/hanna/Documents/traintest/e-commerce-app-react/v4/e-commerce-app/src/redux/shop/shop.selectors.js"],"names":["createSelector","selectShop","state","shop","selectCollections","collections","selectCollectionsForPreview","Object","keys","map","key","selectCollection","collectionUrlParam","selectIsCollectionFetching","isFetching","selectIsCollectionsLoaded"],"mappings":"AAAA,SAASA,cAAT,QAA+B,UAA/B;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAWA,KAAK,CAACC,IAApC;;AAEA,OAAO,MAAMC,iBAAiB,GAAGJ,cAAc,CAC3CC,UAD2C,EAE3CE,IAAI,IAAIA,IAAI,CAACE,WAF8B,CAAxC;AAKP,OAAO,MAAMC,2BAA2B,GAAGN,cAAc,CACrDI,iBADqD,EAErDC,WAAW,IAAIA,WAAW,GAAGE,MAAM,CAACC,IAAP,CAAYH,WAAZ,EAAyBI,GAAzB,CAA6BC,GAAG,IAAIL,WAAW,CAACK,GAAD,CAA/C,CAAH,GAA2D,EAFhC,CAAlD;AAKP,OAAO,MAAMC,gBAAgB,GAAGC,kBAAkB,IAC9CZ,cAAc,CACVI,iBADU,EAEVC,WAAW,IAAIA,WAAW,GAAGA,WAAW,CAACO,kBAAD,CAAd,GAAqC,IAFrD,CADX;AAMP,OAAO,MAAMC,0BAA0B,GAAGb,cAAc,CACpDC,UADoD,EAEpDE,IAAI,IAAIA,IAAI,CAACW,UAFuC,CAAjD;AAKP,OAAO,MAAMC,yBAAyB,GAAGf,cAAc,CACnDC,UADmD,EAEnD;AACAE,IAAI,IAAI,CAAC,CAACA,IAAI,CAACE,WAHoC,CAAhD,C,CAMP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { createSelector } from 'reselect';\n\nconst selectShop = (state) => state.shop;\n\nexport const selectCollections = createSelector(\n    selectShop,\n    shop => shop.collections\n);\n\nexport const selectCollectionsForPreview = createSelector(\n    selectCollections,\n    collections => collections ? Object.keys(collections).map(key => collections[key]) : []\n);\n\nexport const selectCollection = collectionUrlParam => \n    createSelector(\n        selectCollections,\n        collections => collections ? collections[collectionUrlParam] : null\n    );\n\nexport const selectIsCollectionFetching = createSelector(\n    selectShop,\n    shop => shop.isFetching\n);\n\nexport const selectIsCollectionsLoaded = createSelector(\n    selectShop,\n    //if the collection is loaded, we get true, otherwise we get false\n    shop => !!shop.collections\n)\n\n//EXAMPLE\n// export const selectCollectionsForPreview = createSelector(\n//     selectCollections,\n//     (collections) => {\n//         console.log(collections);\n//         let newCollection = Object.keys(collections).map(key => collections[key]);\n//         console.log(newCollection);\n//         return newCollection;\n//     }\n// );"]},"metadata":{},"sourceType":"module"}