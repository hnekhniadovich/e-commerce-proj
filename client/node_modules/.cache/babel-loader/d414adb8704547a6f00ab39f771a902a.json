{"ast":null,"code":"import _objectSpread from \"/home/hanna/Documents/traintest/e-commerce-app-react/v4/e-commerce-app/client/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/home/hanna/Documents/traintest/e-commerce-app-react/v4/e-commerce-app/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/hanna/Documents/traintest/e-commerce-app-react/v4/e-commerce-app/client/src/components/sign-up/sign-up.component.jsx\";\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { signUpStart } from '../../redux/user/user.actions';\nimport './sign-up.styles.scss';\n\nconst SignUp = ({\n  signUpStart\n}) => {\n  const _useState = useState({\n    displayName: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        userCredentials = _useState2[0],\n        setUserCredentials = _useState2[1];\n\n  const displayName = userCredentials.displayName,\n        email = userCredentials.email,\n        password = userCredentials.password,\n        confirmPassword = userCredentials.confirmPassword;\n\n  const handleChange = event => {\n    const _event$target = event.target,\n          value = _event$target.value,\n          name = _event$target.name;\n    setUserCredentials(_objectSpread({}, userCredentials, {\n      [name]: value\n    }));\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    if (password !== confirmPassword) {\n      alert('Passwords do not match!');\n      return;\n    }\n\n    signUpStart({\n      displayName,\n      email,\n      password\n    });\n  };\n\n  return React.createElement(\"div\", {\n    className: \"sign-up\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"I do not have a account\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"Sign up with your email and password\"), React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(FormInput, {\n    type: \"name\",\n    name: \"displayName\",\n    value: displayName,\n    label: \"Display Name\",\n    required: true,\n    handleChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    type: \"email\",\n    name: \"email\",\n    value: email,\n    label: \"Email\",\n    required: true,\n    handleChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    type: \"password\",\n    name: \"password\",\n    value: password,\n    label: \"Password\",\n    required: true,\n    handleChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    type: \"password\",\n    name: \"confirmPassword\",\n    value: confirmPassword,\n    label: \"Confirm Password\",\n    required: true,\n    handleChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"buttons\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(CustomButton, {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, \"Sign Up\"))));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: userCredentials => dispatch(signUpStart(userCredentials))\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);","map":{"version":3,"sources":["/home/hanna/Documents/traintest/e-commerce-app-react/v4/e-commerce-app/client/src/components/sign-up/sign-up.component.jsx"],"names":["React","useState","connect","FormInput","CustomButton","signUpStart","SignUp","displayName","email","password","confirmPassword","userCredentials","setUserCredentials","handleChange","event","target","value","name","handleSubmit","preventDefault","alert","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState} from 'react';\nimport { connect } from 'react-redux';\n\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\n\nimport { signUpStart } from '../../redux/user/user.actions';\n\nimport './sign-up.styles.scss';\n\nconst SignUp = ({ signUpStart }) => {\n    const [userCredentials, setUserCredentials] = useState({ displayName: '', email: '', password: '', confirmPassword: '' });\n    const { displayName, email, password, confirmPassword } = userCredentials;\n\n    const handleChange = (event) => {\n        const { value, name } = event.target;\n        setUserCredentials({ ...userCredentials, [name]: value });\n    }\n\n    const handleSubmit = async event => {\n        event.preventDefault();\n\n        if (password !== confirmPassword) {\n            alert('Passwords do not match!');\n            return;\n        }\n\n        signUpStart({ displayName, email, password });\n    };\n\n    return (\n        <div className='sign-up'>\n            <h2 className=\"title\">I do not have a account</h2>\n            <span>Sign up with your email and password</span>\n            <form onSubmit={handleSubmit}>\n                <FormInput\n                    type=\"name\"\n                    name=\"displayName\"\n                    value={displayName}\n                    label=\"Display Name\"\n                    required\n                    handleChange={handleChange}\n                />\n                <FormInput\n                    type=\"email\"\n                    name=\"email\"\n                    value={email}\n                    label=\"Email\"\n                    required\n                    handleChange={handleChange}\n                />\n                <FormInput\n                    type=\"password\"\n                    name=\"password\"\n                    value={password}\n                    label=\"Password\"\n                    required\n                    handleChange={handleChange}\n                />\n                <FormInput\n                    type=\"password\"\n                    name=\"confirmPassword\"\n                    value={confirmPassword}\n                    label=\"Confirm Password\"\n                    required\n                    handleChange={handleChange}\n                />\n                <div className=\"buttons\">\n                    <CustomButton type=\"submit\">Sign Up</CustomButton>\n                </div>\n            </form>\n\n        </div>\n    )\n}\n\n\nconst mapDispatchToProps = dispatch => ({\n    signUpStart: userCredentials => dispatch(signUpStart(userCredentials))\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);"]},"metadata":{},"sourceType":"module"}